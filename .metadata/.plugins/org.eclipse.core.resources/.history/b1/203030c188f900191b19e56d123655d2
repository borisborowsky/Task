package com.company.catalogue;

import java.time.LocalDate;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.ContainedIn;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.annotations.Store;
import org.hibernate.search.bridge.builtin.IntegerBridge;

import com.company.users.Member;

@Entity
@Indexed
@Table(name="book_tbl")
public final class BookUnit extends Book {
	
	public enum BookStatus { AVAILABLE,RESERVED,TAKEN,LOST }
	
	private static final String DATE_PATTERN = "yyyy-MM-dd";
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "book_id")
	private int id;
	
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	private final double borrowPrice;
	
	
	@ContainedIn
	@ManyToOne
	@JoinColumn(name = "member_id")
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@FieldBridge(impl = IntegerBridge.class)
	@IndexedEmbedded	
	private Member member;
	
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	private  LocalDate borrowDate;
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	private LocalDate returnDate;
	
	@Enumerated(EnumType.STRING)
	private BookStatus bookStatus;
	
	BookUnit() {
		id = 0;
		member = null;
		borrowPrice = 0;
		borrowDate = LocalDate.now();
		returnDate = LocalDate.now();
		bookStatus = null;
	}

	
	@SuppressWarnings("deprecation")
	public
	BookUnit(int memberId, int id, String title, String type, String subject, 
			String authour,  LocalDate publishedDate, Member member, LocalDate borrowDate,
			double borrowPrice) {
		
		super(title, type, subject, authour, publishedDate);
        this.id = id;
		this.member = Objects.requireNonNull(member);
		this.borrowDate = LocalDate.now();
		this.returnDate = LocalDate.now();
		this.borrowPrice = borrowPrice;
		bookStatus = BookStatus.TAKEN;
	}
	




//	@Override
//	public String toString() {
//		return "BookUnit [id=" + id + ", borrowPrice=" + borrowPrice + ", member=" + member + ", borrowDate="
//				+ borrowDate + ", returnDate=" + returnDate + ", bookStatus=" + bookStatus + "]";
//	}
	
	
	
}
