package com.company.books;

import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.ContainedIn;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.Store;

import com.company.users.Member;

@Entity
@Indexed
@Table(name="book_tbl")
public final class BookUnit extends Book {
	
	public enum BookStatus { AVAILABLE,RESERVED,TAKEN,LOST }
	private static final String DATE_PATTERN = "yyyy-MM-dd";
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id")
	private final int id;
	
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	private final double borrowPrice;
	

	@ContainedIn
    @ManyToOne
	@JoinColumn(name = "id", insertable=false, updatable=false)
	private Member member;
	
	private final Date borrowDate;
	private final Date returnDate;
	
	@Enumerated(EnumType.STRING)
	private BookStatus bookStatus;
	
	BookUnit() {
		id = 0;
		member = null;
		borrowPrice = 0;
		borrowDate = new Date();
		returnDate = new Date();
		bookStatus = null;
	}

	
	@SuppressWarnings("deprecation")
	public
	BookUnit(String title, String type, String subject, 
			String authour,  Date publishedDate, Member member, Date borrowDate,
			double borrowPrice) {
		
		super(title, type, subject, authour, publishedDate);
        this.id = 0;
		this.member = Objects.requireNonNull(member);
		this.borrowDate = new Date();
		this.returnDate = new Date();
		this.borrowPrice = borrowPrice;
		bookStatus = BookStatus.TAKEN;
	}


	@Override
	public String toString() {
		return "BookUnit [id=" + id + ", borrowPrice=" + borrowPrice + ", member=" + member + ", borrowDate="
				+ borrowDate + ", returnDate=" + returnDate + ", bookStatus=" + bookStatus + "]";
	}
	
}
